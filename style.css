/* Reset CSS */
/* Zero out user agent stylesheets */
/* Make sure browser CSS so it doesn't interfere with our CSS styles */

* {
    box-sizing: border-box;
    margin: 0;
}
/* * --> (above) selects every single element in HTML */
/* border-box --> sizing of elements won't change just incase we
add a border to them (border will be included in size of element */

body {
    min-height: 100vh;
    font-family: Helvetica;
}

/* vh --> viewport height units --> screen of your device */
/* adjusts to whatever device you're using */

header {
    background-color: #339685;
    height: 50px;
    color: white;
    box-shadow: 1px 1px 3px 2px lightslategray;
}

/* (below) Flexbox is a CSS specification for positioning elements uniformly
It's primarily used for creating layouts */
/* 1-Dimensional layout specification */
/* Uniformly horizontally, or uniformly vertically, or both */

section {
    display: flex;
    width: 600px;
    flex-wrap: wrap;
    margin: auto;
}

/* (above) setting display to flex creates a flex container
all child elements become flex items */

/* Helper CSS Classes */

.left {
    border-left: 3px solid #339685;
}

.right {
    border-right: 3px solid #339685;
}

.top {
    border-top: 3px solid #339685;
}

main {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

/*
- display: flex --> automatically lays out content horizontally
- flex-direction --> lays out content vertically
*/


.square {
    display: flex;
    width: 200px;
    height: 200px;
    justify-content: center;
    align-items: center;
    font-size: 75px;
}

/* Two Flexbox-specific properties (above):
- justify-content --> designed to justify content on the
main axis of the flex container (horizontally)
- align-items --> align on the cross axis (vertical)
*/
